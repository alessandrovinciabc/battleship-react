{"version":3,"sources":["Components/Board.js","logic/ship.js","logic/util/array.js","logic/util/random.js","logic/gameboard.js","logic/computer.js","App.js","index.js"],"names":["Board","props","className","data-testid","playerName","board","squares","map","row","y","square","x","hit","shipIndex","onClick","handlers","ship","sizeOrObject","size","length","Error","newSquares","Array","fill","where","this","isSunk","every","create2D","callback","from","getRandomNumber","min","max","Math","ceil","floor","random","createBoardSquares","shipComponent","checkForValidPlacements","computations","counterX","counterY","checkElementHorizontally","el","coords","i","checkElementVertically","filterPlacements","placements","shipSize","orientation","result","toCheck","push","gameBoard","ships","isValidPlaceForShip","placeShip","isValid","count","receiveHit","hasWorkingShips","some","autoPlaceShips","arrOfShips","reduce","accumulator","possiblePlacements","options","vertical","horizontal","randomOrientation","randomMove","computer","pickMove","hittableSquares","k","range","App","useState","playerBoard","setPlayerBoard","computerBoard","setComputerBoard","setOrientation","remainingShips","setRemainingShips","gameEnded","setGameEnded","playerHasWon","setPlayerHasWon","order","setOrder","gameRestart","setGameRestart","useEffect","testBoard","onKeyDown","e","key","prev","document","addEventListener","removeEventListener","latest","produce","draft","newShip","slice","setPlayerBoardCallback","move","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66fa0be9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Board.css';\r\n\r\nfunction Board(props) {\r\n  return (\r\n    <div className={'Board ' + props.className} data-testid=\"board\">\r\n      <div className=\"Board__title\" data-testid=\"title\">\r\n        <span className=\"title__text\">{props.playerName}</span>\r\n      </div>\r\n      <div className=\"squares\">\r\n        {props.board?.squares.map((row, y) => {\r\n          return row.map((square, x) => {\r\n            return (\r\n              <div\r\n                className={`square ${square.hit ? 'square--hit' : ''} \r\n                  ${square.shipIndex !== null ? 'ship' : ''}\r\n                  `}\r\n                data-testid=\"square\"\r\n                key={`${x},${y}`}\r\n                onClick={\r\n                  props.handlers\r\n                    ? () => {\r\n                        props.handlers({ x, y });\r\n                      }\r\n                    : null\r\n                }\r\n              ></div>\r\n            );\r\n          });\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","function ship(sizeOrObject = 2, squares) {\r\n  if (sizeOrObject?.size && sizeOrObject?.squares) {\r\n    let { size, squares } = sizeOrObject;\r\n\r\n    if (size > 0 && squares?.length === size) {\r\n      return ship(size, squares);\r\n    } else {\r\n      throw new Error('Invalid ship passed as first argument');\r\n    }\r\n  } else if (sizeOrObject < 0) throw new Error('Invalid size for a ship.');\r\n\r\n  let newSquares =\r\n    squares?.length === sizeOrObject\r\n      ? squares\r\n      : Array(sizeOrObject).fill(false);\r\n\r\n  return {\r\n    size: sizeOrObject,\r\n    squares: newSquares,\r\n    hit(where) {\r\n      if (where < 0 || where > this.size) return;\r\n\r\n      this.squares[where - 1] = true;\r\n    },\r\n    isSunk() {\r\n      return this.squares.every((square) => square === true);\r\n    },\r\n  };\r\n}\r\n\r\nexport default ship;\r\n","function create2D(x, y, callback) {\r\n  let new2DArray = Array.from({ length: y }, () => {\r\n    return Array.from({ length: x }, callback);\r\n  });\r\n\r\n  return new2DArray;\r\n}\r\n\r\nexport default create2D;\r\n","function getRandomNumber(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport default getRandomNumber;\r\n","import create2D from './util/array';\r\nimport getRandomNumber from './util/random.js';\r\n\r\nfunction createBoardSquares(size) {\r\n  let callback = () => {\r\n    return {\r\n      shipIndex: null,\r\n      shipComponent: null,\r\n      hit: false,\r\n    };\r\n  };\r\n\r\n  return create2D(size, size, callback);\r\n}\r\n\r\nfunction checkForValidPlacements(board) {\r\n  let size = board.squares.length;\r\n\r\n  let computations = create2D(size, size, () => ({ counterX: 0, counterY: 0 }));\r\n\r\n  let checkElementHorizontally = (el, coords) => {\r\n    let { x, y } = coords;\r\n\r\n    if (el.shipIndex === null) {\r\n      for (let i = x; i >= 0 && board.squares[y][i].shipIndex === null; --i) {\r\n        computations[y][i].counterX += 1;\r\n      }\r\n    }\r\n  };\r\n\r\n  let checkElementVertically = (el, coords) => {\r\n    let { x, y } = coords;\r\n\r\n    if (el.shipIndex === null) {\r\n      for (let i = y; i >= 0 && board.squares[i][x].shipIndex === null; --i) {\r\n        computations[i][x].counterY += 1;\r\n      }\r\n    }\r\n  };\r\n\r\n  for (let y = 0; y < size; ++y) {\r\n    for (let x = 0; x < size; ++x) {\r\n      checkElementHorizontally(board.squares[y][x], { x, y });\r\n      checkElementVertically(board.squares[y][x], { x, y });\r\n      computations[y][x].coords = { x, y };\r\n    }\r\n  }\r\n\r\n  return computations;\r\n}\r\n\r\nlet filterPlacements = (placements, shipSize, orientation = 'horizontal') => {\r\n  let result = [];\r\n  let toCheck = orientation === 'horizontal' ? 'counterX' : 'counterY';\r\n\r\n  for (let y = 0; y < placements.length; ++y) {\r\n    for (let x = 0; x < placements.length; ++x) {\r\n      if (placements[y][x][toCheck] >= shipSize) {\r\n        result.push(placements[y][x]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nfunction gameBoard(size = 10) {\r\n  if (size <= 0) throw new Error('Invalid board size.');\r\n\r\n  let squares = createBoardSquares(size);\r\n\r\n  return {\r\n    squares,\r\n    ships: [],\r\n    isValidPlaceForShip(ship, coords, orientation) {\r\n      let { x, y } = coords;\r\n\r\n      if (orientation !== 'horizontal' && orientation !== 'vertical')\r\n        throw new Error('Invalid orientation provided.');\r\n\r\n      if (x < 0 || y < 0 || x >= size || y >= size)\r\n        throw new Error('Invalid coordinates for starting ship position.');\r\n\r\n      let boundToCheck;\r\n      if (orientation === 'horizontal') {\r\n        boundToCheck = x;\r\n      } else {\r\n        boundToCheck = y;\r\n      }\r\n\r\n      if (boundToCheck + ship.size > size) return false;\r\n\r\n      if (orientation === 'horizontal') {\r\n        for (let i = x; i < x + ship.size; ++i) {\r\n          if (this.squares[y][i].shipIndex !== null) return false;\r\n        }\r\n      } else {\r\n        for (let i = y; i < y + ship.size; ++i) {\r\n          if (this.squares[i][x].shipIndex !== null) return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    },\r\n    placeShip(ship, coords, orientation = 'horizontal') {\r\n      let isValid = this.isValidPlaceForShip(ship, coords, orientation);\r\n\r\n      if (!isValid) throw new Error('Invalid placement for ship.');\r\n\r\n      let { x, y } = coords;\r\n\r\n      if (orientation === 'horizontal') {\r\n        let count = 1;\r\n        for (let i = x; i < x + ship.size; ++i) {\r\n          this.squares[y][i].shipIndex = this.ships.length;\r\n          this.squares[y][i].shipComponent = count++;\r\n        }\r\n      } else {\r\n        let count = 1;\r\n        for (let i = y; i < y + ship.size; ++i) {\r\n          this.squares[i][x].shipIndex = this.ships.length;\r\n          this.squares[i][x].shipComponent = count++;\r\n        }\r\n      }\r\n\r\n      this.ships.push(ship);\r\n    },\r\n    receiveHit(coords) {\r\n      let { x, y } = coords;\r\n      let square = this.squares[y][x];\r\n      let result = false;\r\n\r\n      if (square.shipIndex !== null) {\r\n        this.ships[square.shipIndex].hit(square.shipComponent);\r\n\r\n        result = true;\r\n      }\r\n      square.hit = true;\r\n\r\n      return result;\r\n    },\r\n    hasWorkingShips() {\r\n      if (!this.ships.length) return false;\r\n\r\n      let result = this.ships.some((ship) => !ship.isSunk());\r\n      return result;\r\n    },\r\n    autoPlaceShips(arrOfShips) {\r\n      let totalSize = arrOfShips.reduce(\r\n        (accumulator, ship) => accumulator + ship.size,\r\n        0\r\n      );\r\n\r\n      if (totalSize > size * size)\r\n        throw new Error(\"Can't autoplace: ships exceed board size.\");\r\n\r\n      for (let i = 0; i < arrOfShips.length; ++i) {\r\n        let possiblePlacements = checkForValidPlacements(this);\r\n\r\n        let options = {\r\n          vertical: filterPlacements(\r\n            possiblePlacements,\r\n            arrOfShips[i].size,\r\n            'vertical'\r\n          ),\r\n          horizontal: filterPlacements(\r\n            possiblePlacements,\r\n            arrOfShips[i].size,\r\n            'horizontal'\r\n          ),\r\n        };\r\n\r\n        if (options.vertical.length > 0 && options.horizontal.length > 0) {\r\n          let randomOrientation = getRandomNumber(0, 1)\r\n            ? 'vertical'\r\n            : 'horizontal';\r\n\r\n          let randomMove = getRandomNumber(\r\n            0,\r\n            options[randomOrientation].length - 1\r\n          );\r\n\r\n          this.placeShip(\r\n            arrOfShips[i],\r\n            options[randomOrientation][randomMove].coords,\r\n            randomOrientation\r\n          );\r\n        } else if (options.vertical.length > 0) {\r\n          let randomMove = getRandomNumber(0, options.vertical.length - 1);\r\n\r\n          this.placeShip(\r\n            arrOfShips[i],\r\n            options.vertical[randomMove].coords,\r\n            'vertical'\r\n          );\r\n        } else if (options.horizontal.length > 0) {\r\n          let randomMove = getRandomNumber(0, options.horizontal.length - 1);\r\n\r\n          this.placeShip(\r\n            arrOfShips[i],\r\n            options.horizontal[randomMove].coords,\r\n            'horizontal'\r\n          );\r\n        }\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nexport default gameBoard;\r\n","import getRandomNumber from './util/random.js';\r\n\r\nlet computer = {\r\n  pickMove(board) {\r\n    let hittableSquares = [];\r\n\r\n    for (let i = 0; i < board.squares.length; ++i) {\r\n      for (let k = 0; k < board.squares.length; ++k) {\r\n        if (!board.squares[i][k].hit) {\r\n          hittableSquares.push({ y: i, x: k });\r\n        }\r\n      }\r\n    }\r\n\r\n    let range = hittableSquares.length;\r\n\r\n    if (range === 0) throw new Error('No squares to hit!');\r\n\r\n    let move = {\r\n      ...hittableSquares[getRandomNumber(0, range - 1)],\r\n    };\r\n\r\n    return move;\r\n  },\r\n};\r\n\r\nexport default computer;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Board from './Components/Board';\r\n\r\nimport ship from './logic/ship.js';\r\nimport gameBoard from './logic/gameboard.js';\r\nimport computer from './logic/computer.js';\r\n\r\nimport produce from 'immer';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  let [playerBoard, setPlayerBoard] = useState(gameBoard(10));\r\n  let [computerBoard, setComputerBoard] = useState(gameBoard(10));\r\n\r\n  let [orientation, setOrientation] = useState('vertical');\r\n  let [remainingShips, setRemainingShips] = useState([5, 4, 3, 3, 2]);\r\n\r\n  let [gameEnded, setGameEnded] = useState(false);\r\n  let [playerHasWon, setPlayerHasWon] = useState(false);\r\n\r\n  let [order, setOrder] = useState(\r\n    'Place your ships by clicking. Press R to rotate.'\r\n  );\r\n\r\n  let [gameRestart, setGameRestart] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!gameRestart) return;\r\n\r\n    let testBoard = gameBoard(10);\r\n    let ships = [5, 4, 3, 3, 2];\r\n\r\n    ships = ships.map((shipSize) => {\r\n      return ship(shipSize);\r\n    });\r\n\r\n    testBoard.autoPlaceShips(ships);\r\n\r\n    setComputerBoard(testBoard);\r\n    setGameRestart(false);\r\n  }, [gameRestart]);\r\n\r\n  let handleSquareClick = (coords) => {\r\n    if (gameEnded || remainingShips.length > 0) return;\r\n    let setPlayerBoardCallback = (latest) => {\r\n      return produce(latest, (draft) => {\r\n        let move = computer.pickMove(draft);\r\n        draft.receiveHit(move);\r\n        if (!draft.hasWorkingShips()) {\r\n          setGameEnded(true);\r\n          setOrder('');\r\n        }\r\n      });\r\n    };\r\n\r\n    setComputerBoard((latest) => {\r\n      if (latest.squares[coords.y][coords.x].hit) return latest;\r\n\r\n      setPlayerBoard(setPlayerBoardCallback);\r\n\r\n      return produce(latest, (draft) => {\r\n        draft.receiveHit(coords);\r\n\r\n        if (!draft.hasWorkingShips()) {\r\n          setGameEnded(true);\r\n          setPlayerHasWon(true);\r\n          setOrder('');\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let onKeyDown = (e) => {\r\n      if (e.key === 'r' || e.key === 'R') {\r\n        setOrientation((prev) => {\r\n          return prev === 'horizontal' ? 'vertical' : 'horizontal';\r\n        });\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', onKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  let handlePlayerBoardClick = (coords) => {\r\n    setPlayerBoard((latest) => {\r\n      if (remainingShips.length === 0) return latest;\r\n\r\n      let result = produce(latest, (draft) => {\r\n        let newShip = ship(remainingShips[0]);\r\n        if (!draft.isValidPlaceForShip(newShip, coords, orientation)) return;\r\n        draft.placeShip(newShip, coords, orientation);\r\n\r\n        setRemainingShips(remainingShips.slice(1));\r\n        if (remainingShips.length - 1 === 0) {\r\n          setOrder('Game has begun! Make your move.');\r\n        }\r\n      });\r\n\r\n      return result;\r\n    });\r\n  };\r\n\r\n  let onReset = () => {\r\n    setRemainingShips([5, 4, 3, 3, 2]);\r\n    setPlayerHasWon(false);\r\n    setGameEnded(false);\r\n    setOrder('Place your ships by clicking. Press R to rotate.');\r\n\r\n    setPlayerBoard(gameBoard(10));\r\n    setComputerBoard(gameBoard(10));\r\n\r\n    setGameRestart(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App__title\">Battleship🛥</div>\r\n      <div className=\"text--order\">{order}</div>\r\n      {gameEnded ? (\r\n        <div className=\"text--winning\">\r\n          {playerHasWon ? 'Player' : 'Computer'} has won!\r\n        </div>\r\n      ) : null}\r\n      <button className=\"button--reset\" onClick={onReset}>\r\n        Reset\r\n      </button>\r\n      <div className=\"App__container\">\r\n        <Board\r\n          playerName=\"Player\"\r\n          board={playerBoard}\r\n          handlers={handlePlayerBoardClick}\r\n        />\r\n        <Board\r\n          playerName=\"Computer\"\r\n          board={computerBoard}\r\n          handlers={handleSquareClick}\r\n          className=\"Board--computer\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}